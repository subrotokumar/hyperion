// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: deployments.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createDeployment = `-- name: CreateDeployment :one
INSERT INTO "deployments" 
("project_id", "status")
VALUES ( $1, $2 ) RETURNING id, project_id, status
`

type CreateDeploymentParams struct {
	ProjectID pgtype.Int8      `json:"project_id"`
	Status    DeploymentStatus `json:"status"`
}

func (q *Queries) CreateDeployment(ctx context.Context, arg CreateDeploymentParams) (Deployment, error) {
	row := q.db.QueryRow(ctx, createDeployment, arg.ProjectID, arg.Status)
	var i Deployment
	err := row.Scan(&i.ID, &i.ProjectID, &i.Status)
	return i, err
}

const getDeploymentByProjectId = `-- name: GetDeploymentByProjectId :one
SELECT id, project_id, status FROM "deployments"
WHERE "project_id" = $1
`

func (q *Queries) GetDeploymentByProjectId(ctx context.Context, projectID pgtype.Int8) (Deployment, error) {
	row := q.db.QueryRow(ctx, getDeploymentByProjectId, projectID)
	var i Deployment
	err := row.Scan(&i.ID, &i.ProjectID, &i.Status)
	return i, err
}
