// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: refresh_token.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createRefreshToken = `-- name: CreateRefreshToken :one
INSERT INTO
    "refresh_token" (
        "id",
        "token",
        "user_id",
        "expiry"
    )
VALUES
    ($1, $2, $3, $4) RETURNING id, token, user_id, expiry
`

type CreateRefreshTokenParams struct {
	ID     uuid.UUID          `json:"id"`
	Token  string             `json:"token"`
	UserID int32              `json:"user_id"`
	Expiry pgtype.Timestamptz `json:"expiry"`
}

func (q *Queries) CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) (RefreshToken, error) {
	row := q.db.QueryRow(ctx, createRefreshToken,
		arg.ID,
		arg.Token,
		arg.UserID,
		arg.Expiry,
	)
	var i RefreshToken
	err := row.Scan(
		&i.ID,
		&i.Token,
		&i.UserID,
		&i.Expiry,
	)
	return i, err
}
